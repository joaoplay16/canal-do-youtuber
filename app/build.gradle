plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.onesignal.androidsdk.onesignal-gradle-plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.playlab.canaldoyoutuber"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [
                onesignal_app_id: '40e0af51-6308-4300-8515-8ae4593f24f2',
                onesignal_google_project_number: 'REMOTE'
        ]


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.playlab.canaldoyoutuber'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    implementation "androidx.test:core:1.5.0"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.mockito:mockito-core:4.0.0"

    // Instrumented Unit Tests
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.28.3"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "org.mockito:mockito-core:4.0.0"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44'
    debugImplementation 'androidx.fragment:fragment-testing:1.5.4'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.0'
    androidTestImplementation "com.google.android.apps.common.testing.accessibility.framework:accessibility-test-framework:4.0.0"

    /*
    * Room API para persistência local eficiente utilizando
    * "por debaixo dos panos" a persistência SQLite.
    * */
    def room_version = '2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    /**
     * Picasso API para carregamento de imagens remotas
     * de maneira eficiente.
     */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /**
     * Para uso da OneSignal API. API redundante de
     * dado de novo vídeo YouTube em projeto.
     */
    implementation 'com.onesignal:OneSignal:[4.0.0, 4.99.99]'
    implementation 'com.google.firebase:firebase-messaging:23.1.0'

    /**
     * Retrofit API para comunicação remota. O Parse é
     * realizado com a Gson API.
     */
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    /**
     * Para uso da WorkManager API. API responsável por
     * trabalhos em background quando o app não está em uso.
     */
    implementation "androidx.work:work-runtime-ktx:2.7.1"

}